1.set user and email
git config --global user.name "your name"
git config --global user.email "your email"

I just create the random name and email, I do not know whether it is ok or not.
if you do not do this, it will recommand you "Please tell me who you are."
2.build a repository
mkdir learngit
cd learngit
git init

3.how to commit a file
git add "testFile" 
git commit -m "the description of this commit"

after then the "testFile" will be commit to repository
-m "the description of this commit",like the log

4.git status
to know the present status of the repository,like some files have been modified,it will recommand you to commit to the repository

5.git diff "file"
show the differences of the "file" between the local one and the one on the repository

6.git log
show the change log from newest to oldest
if you do not want so much msg,add "--pretty=oneline",like below
git log --pretty=oneline

7.git reflog
it will record all the operation and the id of version,you can reset to any version

8.git reset --hard HEADID
"git log" or "git reflog" will show the log with HEADID in the front of each log msg,
use this cmd,can reset the repository to the status of HEADID

9.git checkout -- <file>
reset the <file> to stage(git add) or repository head version(last git commit) 

10.ssh-keygen -t rsa -C "1173568288@qq.com"
generate the ssh key in ~/.ssh/,copy the whole msg of id_ rsa.pub , add ssh key in github.com

11.about branch
11.1 see branch:git branch
11.2 create branch:git branch <name>
11.3 switch branch:git checkout <name> OR git switch <name>
11.3 create and switch to branch: git checkout -b <name> OR git switch -c <name>
11.4 merge branch to current branch:git merge <name>
11.5 del branch:git branch -d <name>

12.push local repo to remote
12.1 add remote repo name :git remote add <name> git@github.com:xxx/xxx.git
12.2 first push : git push -u <name> master
	later push : git push <name> master
13.git log --graph
show merge of branch

14.git stash:save the developping work
14.1 git stash list:show stash
14.2 git stash apply <version>:reset to stash <version> ,if there is no <version>,reset to newest
14.3 git stash drop :del stash
14.4 git stash pop:equal to apply + drop

15.multiple develop
15.1 git remote -v:show the remote repository msg
15.2 git push origin branch-name:push local branch nameed <branch-name> to origin (remote repository)
	if failed for conflict, <push pull> first
15.3 git pull:pull the remote repo to local
	if failed,build the reference : 
15.4 git branch --set-upstream-to=origin/branch-name branch-name:build the reference between local and remote repo
15.5 git checkout -b branch-name origin/branch-name : build local branch on origin repo

16.git tag
16.1 git tag tagname <version_id>: add tag for the version of <version_id>,if there is no <version_id>,add tag for newest commit
	git tag -a tagname -m "description" <version_id>
16.2 git tag:show all tagname
16.3 git show tagname:show detail msg of tagname
16.4 git tag -d tagname:delete tag
16.5 git push origin tagname:push tag to origin repo
